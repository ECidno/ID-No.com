# Runner register
#
# sudo gitlab-runner register \
# --non-interactive \
# --leave-runner \
# --url "https://git.mp-group.net/" \
# --registration-token "<token>" \
# --executor "shell" \
# --shell "bash" \
# --description "mpsdev02.mp-group.local" \
# --run-untagged="true" \
# --tag-list "cloudbase,less,symfony,yarn" \
# --locked="false" \
# --access-level="not_protected" \
#
.git-script: &git-script |
  cd /srv/www/symfony.idno/html
  git status
  lines=$(git status -s translations | wc -l)
  if [ $lines -gt 0 ];then
    echo "committing translations"
    git config --global user.name "staging.id-no.com"
    git config --global user.email "git@mp-group.net"
    git checkout -b translations-`date +%Y%m%d-%H%M`
    git add translations/*
    git commit -m "[AUTO] Translations"
    git push --set-upstream origin -o ci.skip translations-`date +%Y%m%d-%H%M`
    git checkout staging
  else
    echo "no change, nothing to commit"
  fi


# cache
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - yarn


# We tell GitLab to install all the packages
# before running anything.
# Docker images come with yarn preinstalled
#before_script:
#  - apt-get update -qq && apt-get install

# You specify the stages. Those are the steps that GitLab will go through
# Order matters.
stages:
  # - build
  # - test
  - staging
  - production

# frontend
staging:
  stage: staging
  tags:
    - symfony

  # limit build to staging
  only:
    - staging

  # before
  before_script:
    - cd /srv/www/symfony.idno/html
    - yarn config set cache-folder .yarn

  # the script itself
  script:
    - cd /srv/www/symfony.idno/html

    #- *git-script

    - git checkout staging
    - git pull origin staging

    # composer
    - composer install

    # cache
    - "php bin/console cache:clear"
    - "php bin/console cache:warmup"

    # yarn
    - yarn
    - yarn encore dev

    # rights
    - sudo chgrp -R www-data var/cache/*
    - sudo chgrp www-data translations/*

    # finally, reload php-fpm
    - sudo systemctl reload php8.1-fpm.service


# production
production:
  stage: production
  tags:
    - symfony

  # limit build to main
  only:
    - main

  # before
  before_script:
    - cd /srv/www/id-no.com/html
    - yarn config set cache-folder .yarn

  # the script itself
  script:
    - cd /srv/www/id-no.com/html

    - git checkout main
    - git pull origin main

    # composer
    - composer install --optimize-autoloader
    - composer dump-env prod

    # cache
    - "php bin/console cache:clear"
    - "php bin/console cache:warmup"

    # yarn
    - yarn
    - yarn encore production --progress

  # after
  after_script:
    - cd /srv/www/id-no.com/html

    # rights
    - sudo chgrp -R www-data var/cache/*

#     # finally, reload php-fpm
#     - sudo systemctl reload php7.4-fpm.service
#     - sudo systemctl restart memcached.service

# test
#test:
#  stage: test
#  tags:
#    - cloudbase
#  script:
#    - echo "Runner test complete"

